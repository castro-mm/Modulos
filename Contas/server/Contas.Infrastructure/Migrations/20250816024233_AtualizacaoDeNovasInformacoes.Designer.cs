// <auto-generated />
using System;
using Contas.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contas.Infrastructure.Migrations
{
    [DbContext(typeof(ContasContext))]
    [Migration("20250816024233_AtualizacaoDeNovasInformacoes")]
    partial class AtualizacaoDeNovasInformacoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contas.Core.Entities.Credor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CNPJ")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("SegmentoDoCredorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SegmentoDoCredorId");

                    b.ToTable("Credor", (string)null);
                });

            modelBuilder.Entity("Contas.Core.Entities.Pagador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CPF")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("Pagador", (string)null);
                });

            modelBuilder.Entity("Contas.Core.Entities.RegistroDaConta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<byte[]>("BoletoBancario")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("CodigoDeBarras")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<byte[]>("ComprovanteDePagamento")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<int>("CredorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDePagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("PagadorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDoDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDosJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CredorId");

                    b.HasIndex("PagadorId");

                    b.ToTable("RegistroDaConta", (string)null);
                });

            modelBuilder.Entity("Contas.Core.Entities.SegmentoDoCredor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("SegmentoDoCredor", (string)null);
                });

            modelBuilder.Entity("Contas.Core.Entities.Credor", b =>
                {
                    b.HasOne("Contas.Core.Entities.SegmentoDoCredor", "SegmentoDoCredor")
                        .WithMany("Credores")
                        .HasForeignKey("SegmentoDoCredorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SegmentoDoCredor");
                });

            modelBuilder.Entity("Contas.Core.Entities.RegistroDaConta", b =>
                {
                    b.HasOne("Contas.Core.Entities.Credor", "Credor")
                        .WithMany("RegistrosDaConta")
                        .HasForeignKey("CredorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contas.Core.Entities.Pagador", "Pagador")
                        .WithMany("RegistrosDaConta")
                        .HasForeignKey("PagadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credor");

                    b.Navigation("Pagador");
                });

            modelBuilder.Entity("Contas.Core.Entities.Credor", b =>
                {
                    b.Navigation("RegistrosDaConta");
                });

            modelBuilder.Entity("Contas.Core.Entities.Pagador", b =>
                {
                    b.Navigation("RegistrosDaConta");
                });

            modelBuilder.Entity("Contas.Core.Entities.SegmentoDoCredor", b =>
                {
                    b.Navigation("Credores");
                });
#pragma warning restore 612, 618
        }
    }
}
